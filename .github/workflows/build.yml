name: Build
on: workflow_dispatch
permissions:
  contents: read

jobs:
  prepare:
    permissions:
      contents: write  # for push_release
    runs-on: ubuntu-latest
    outputs:
      version_suffix: ${{ steps.version_suffix.outputs.version_suffix }}
      ytdlp_version: ${{ steps.bump_version.outputs.ytdlp_version }}
      head_sha: ${{ steps.push_release.outputs.head_sha }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
          python-version: '3.10'

    - name: Set version suffix
      id: version_suffix
      env:
        PUSH_VERSION_COMMIT: ${{ secrets.PUSH_VERSION_COMMIT }}
      if: "env.PUSH_VERSION_COMMIT == ''"
      run: echo "version_suffix=$(date -u +"%H%M%S")" >> "$GITHUB_OUTPUT"
    - name: Bump version
      id: bump_version
      run: |
        python devscripts/update-version.py ${{ steps.version_suffix.outputs.version_suffix }}
        make issuetemplates

    - name: Push to release
      id: push_release
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@example.com
        git add -u
        git commit -m "[version] update" -m "Created by: ${{ github.event.sender.login }}" -m ":ci skip all :ci run dl"
        git push origin --force ${{ github.event.ref }}:release
        echo "head_sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
    - name: Update master
      env:
        PUSH_VERSION_COMMIT: ${{ secrets.PUSH_VERSION_COMMIT }}
      if: "env.PUSH_VERSION_COMMIT != ''"
      run: git push origin ${{ github.event.ref }}


  build_windows:
    runs-on: windows-latest
    needs: prepare

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:  # 3.8 is used for Win7 support
          python-version: '3.8'
    - name: Install Requirements
      run: |  # Custom pyinstaller built with https://github.com/yt-dlp/pyinstaller-builds
          python -m pip install -U pip setuptools wheel py2exe
          pip install -U "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-5.3-py3-none-any.whl" -r requirements.txt

    - name: Prepare
      run: |
          python devscripts/update-version.py ${{ needs.prepare.outputs.version_suffix }}
          python devscripts/make_lazy_extractors.py
    - name: Build
      run: |
          python setup.py py2exe
          Move-Item ./dist/yt-dlp.exe ./dist/yt-dlp_min.exe
          python pyinst.py
          python pyinst.py --onedir
          Compress-Archive -Path ./dist/yt-dlp/* -DestinationPath ./dist/yt-dlp_win.zip

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        path: |
          dist/yt-dlp.exe
          dist/yt-dlp_min.exe
          dist/yt-dlp_win.zip


  build_windows32:
    runs-on: windows-latest
    needs: prepare

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:  # 3.7 is used for Vista support. See https://github.com/yt-dlp/yt-dlp/issues/390
          python-version: '3.7'
          architecture: 'x86'
    - name: Install Requirements
      run: |
          python -m pip install -U pip setuptools wheel
          pip install -U "https://yt-dlp.github.io/Pyinstaller-Builds/i686/pyinstaller-5.3-py3-none-any.whl" -r requirements.txt

    - name: Prepare
      run: |
          python devscripts/update-version.py ${{ needs.prepare.outputs.version_suffix }}
          python devscripts/make_lazy_extractors.py
    - name: Build
      run: |
          python pyinst.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        path: |
          dist/yt-dlp_x86.exe


  publish_release:
    permissions:
      contents: write  # for action-gh-release
    runs-on: ubuntu-latest
    needs: [prepare, build_windows, build_windows32]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3

    - name: Get Changelog
      run: |
        changelog=$(grep -oPz '(?s)(?<=### ${{ needs.prepare.outputs.ytdlp_version }}\n{2}).+?(?=\n{2,3}###)' Changelog.md) || true
        echo "changelog<<EOF" >> $GITHUB_ENV
        echo "$changelog" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Publish Release
      uses: yt-dlp/action-gh-release@v1
      with:
        tag_name: ${{ needs.prepare.outputs.ytdlp_version }}
        name: yt-dlp ${{ needs.prepare.outputs.ytdlp_version }}
        target_commitish: ${{ needs.prepare.outputs.head_sha }}
        body: |
          #### [A description of the various files]((https://github.com/yt-dlp/yt-dlp#release-files)) are in the README

          ---
          <details open><summary><h3>Changelog</summary>
          <p>

          ${{ env.changelog }}

          </p>
          </details>
        files: |
          artifact/yt-dlp.exe
          artifact/yt-dlp_win.zip
          artifact/yt-dlp_min.exe
          artifact/yt-dlp_x86.exe
